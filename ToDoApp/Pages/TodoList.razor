@page "/list"
@using TodoApp.Model;
@inject IJSRuntime jsRuntime;

<h3>Todo List</h3>

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-header">
                    <input type="search" class="form-control w-50 float-start" @oninput="HandleInput" placeholder="Search Task..." />
                    <button class="btn btn-outline-primary float-end" @onclick="SaveTask">@ButtonName</button>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="vstack gap-2">
                                <label for="name" class="form-label">Task Name</label>
                                <input type="text" @bind="todo.Title" class="form-control" />
                            </div>
                        </div>
                        <div class="col-lg-8">

                            @using TodoApp.Model
                            <table class="table table-striped table-responsive">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Title</th>
                                        <th>Date</th>
                                        <th>Completed</th>
                                        <th>Action/Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var todo in SearchTodos)
                                    {
                                        <tr>
                                            <td>@todo.Id</td>
                                            <td>@todo.Title</td>
                                            <td>@todo.Date</td>
                                            <td>@todo.isDone</td>
                                            <td>
                                                @if (todo.isDone)
                                                {
                                                    <img src="./img/mark.png" width="40" height="30" />
                                                }
                                                else
                                                {
                                                    <div class="form-group form-check">
                                                        <button class="btn btn-success btn-sm" @onclick="()=>CompletedTask(todo.Id)">Complete</button>
                                                    </div>
                                                }
                                            </td>
                                            <td>
                                                <button class="btn btn-danger btn-sm" @onclick="()=>DeleteTask(todo.Id)">Delete</button>
                                            </td>
                                            <td>
                                                <button class="btn btn-info btn-sm" @onclick="()=>EditTask(todo.Id)">Edit</button>
                                            </td>
                                            <td>
                                                <button class="btn btn-warning btn-sm" @onclick="()=>ViewTask(todo.Id)">View</button>
                                            </td>
                                        </tr>

                                    }
                                </tbody>
                                <tfoot>@ResultMessage </tfoot>
                            </table>

                            @code {
                                [Parameter] public List<Todo> MyTodos { get; set; } = new();
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<DetailTodo Todo="Detail" />

@code {
    public string Filter;
    public string? ResultMessage { get; set; }

    public Todo todo = new();
    public static List<Todo> todos = new();
    public static List<Todo> SearchTodos = new();
    public Todo Detail = new();
    string ButtonName = "Add Task";

    public void SaveTask()
    {
        if (todo.Id > 0)
        {
            var updateTask = FindTodo(todo.Id);
            if (CheckTodoIfNull(updateTask)) return;
            updateTask.Title = todo.Title;
            todo = new();
            ButtonName = "Add Task";
        }
        else
        {
            todo.Id = todos.Count + 1;
            var check = todos.FirstOrDefault(t => t.Title.Equals(todo.Title, StringComparison.OrdinalIgnoreCase));

            if (!CheckTodoIfNull(check)) return;
            todos.Add(todo);
            todo = new();
        }
        SearchTodos = todos;
    }



    void CompletedTask(int id)
    {
        var findTask = FindTodo(id);
        if (CheckTodoIfNull(findTask)) return;

        findTask.isDone = true;
        ButtonName = "Task Completed!";
    }


    async Task DeleteTask(int id)
    {
        bool confirm = await jsRuntime.InvokeAsync<bool>("confirm", "Are you sure to delete?");
        if (!confirm) return;
        var deleteTask = FindTodo(id);
        if (CheckTodoIfNull(deleteTask)) return;
        todos.Remove(deleteTask);
    }


    void EditTask(int id)
    {
        var editTodo = FindTodo(id);
        if (CheckTodoIfNull(editTodo)) return;

        todo = editTodo;
        ButtonName = $"Update - {editTodo.Title}";
        SearchTodos = todos;
    }


    void ViewTask(int id)
    {
        var viewTask = FindTodo(id);
        if (CheckTodoIfNull(viewTask)) return;
        Detail = viewTask;
    }


    private bool CheckTodoIfNull(Todo todo) => todo is null;

    private Todo FindTodo(int id) => todos.FirstOrDefault(t => t.Id == id)!;

    void HandleInput(ChangeEventArgs e)
    {
        string filter = e.Value!.ToString()!;
        var response = todos.Where(n => n.Title.Contains(filter)).ToList();
        if (response.Count == 0)
        {
            SearchTodos = [];
            ResultMessage = "Nothing related found";
        }

        else
        {
            SearchTodos = response;
            ResultMessage = "";
        }

        StateHasChanged();
    }
}
